#include "Action.h"

Action::Action()
{
    this->origine = NULL;
    this->sort = NULL;
}

Action::Action(Case *origine, Sort *sort, std::vector<Case*> cible)
{
	this->origine = origine;
	this->sort = sort;
	this->cible = cible;
}


/** 
     *  Permet de recupérer le sort lié à une action
     */
Sort* Action::getSort()
// don't delete the following line as it's needed to preserve source code of this autogenerated element
// section 10-103-10-84-37565dd:13daac254e2:-8000:0000000000000E20 begin
{
		return sort;
}
// section 10-103-10-84-37565dd:13daac254e2:-8000:0000000000000E20 end
// don't delete the previous line as it's needed to preserve source code of this autogenerated element


/** 
     *  Récupére l'origine du sort
     */
Case* Action::getOrigine()
// don't delete the following line as it's needed to preserve source code of this autogenerated element
// section 10-103-10-84-37565dd:13daac254e2:-8000:0000000000000E22 begin
{
	return origine;
}
// section 10-103-10-84-37565dd:13daac254e2:-8000:0000000000000E22 end
// don't delete the previous line as it's needed to preserve source code of this autogenerated element


/** 
     *  Récupére la liste des cibles du sort
     */
std::vector<Case*> Action::getCible()
// don't delete the following line as it's needed to preserve source code of this autogenerated element
// section 10-103-10-84-37565dd:13daac254e2:-8000:0000000000000E24 begin
{
	return cible;
}
// section 10-103-10-84-37565dd:13daac254e2:-8000:0000000000000E24 end
// don't delete the previous line as it's needed to preserve source code of this autogenerated element

void Action::setOrigine(Case* origine)
{
    this->origine = origine;
}

void Action::setSort(Sort* sort)
{
    this->sort = sort;
}

void Action::ajouterCible(Case* nouvelleCase)
{
    cible.push_back(nouvelleCase);
}
